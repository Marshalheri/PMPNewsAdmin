@using System.Web.UI.WebControls
@using PMPAdmin.Models
@model LoginViewModel
@{
    ViewBag.Title = "PMP Admin | Login";
    Layout = null;
}

@*<h2>@ViewBag.Title.</h2>*@
@*<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new {ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr/>
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new {@class = "form-control"})
                        @Html.ValidationMessageFor(m => m.Email, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new {@class = "col-md-2 control-label"})
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new {@class = "form-control"})
                        @Html.ValidationMessageFor(m => m.Password, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default"/>
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>
                @* Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p> *@
@*}
            </section>
        </div>
        <div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
    </div>*@

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>@ViewBag.title</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- Google Font: Source Sans Pro -->
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet">

    @Styles.Render("~/admin-lte/css")

    @*Included jquery into the entire project here..*@
    <script type="text/javascript" src="~/admin-lte/plugins/jquery/jquery.min.js"></script>
</head>
<body class="hold-transition login-page">
<div class="login-box">
    <div class="login-logo">
        <b>PMP ADMIN LOGIN</b>
    </div>
    <!-- /.login-logo -->
    <div class="card">
        <div class="card-body login-card-body">
            <p class="login-box-msg">Please Sign in to start your session</p>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form", id = "loginForm" }))
            {
                @Html.AntiForgeryToken()
                <hr />
                <div class="form-group mb-3">
                    <div class="input-group mb-3">
                        @Html.EditorFor(m => m.Email,
                            new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control",
                                    @placeholder = "Enter your email",
                                    @id = "categoryNameTextBox",
                                    @required = "true"
                                }
                            }
                            )
                        <span class="input-group-append">
                            <span class="input-group-text">
                                <span class="fas fa-envelope"></span>
                            </span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    <div class="input-group mb-3">
                        @Html.EditorFor(m => m.Password,
                            new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control",
                                    @placeholder = "Enter your valid password",
                                    @id = "passwordTextBox",
                                    @required = "true"
                                }
                            }
                            )
                        <span class="input-group-append">
                            <span class="input-group-text">
                                <span class="fas fa-user"></span>
                            </span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>

                    @*<div class="form-group">
                            <div class="input-group mb-3">
                                <input type="email"
                                       class="form-control"
                                       placeholder="Enter your Email address">
                                <span class="input-group-append">
                                    <span class="input-group-text">
                                        <span class="fas fa-envelope"></span>
                                    </span>
                                </span>
                            </div>
                            <small>
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </small>
                        </div>*@

                    @*<div class="form-group">
                            <div class="input-group mb-3">
                                <input type="password"
                                       class="form-control"
                                       placeholder="Enter your valid password">
                                <div class="input-group-append">
                                    <div class="input-group-text">
                                        <span class="fas fa-lock"></span>
                                    </div>
                                </div>
                            </div>
                            <small>
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </small>
                        </div>*@

                <div class="input-group mb-3">
                    <div class="icheck-primary">
                        @Html.CheckBoxFor(m => m.RememberMe)
                        @Html.LabelFor(m => m.RememberMe)
                    </div>
                </div>

                <div class="form-group">
                    <input type="button" 
                           value="Log in" 
                           class="btn btn-outline-dark btn-block" 
                           id="loginButton" 
                           onclick="handleLogin()"/>
                </div>
                    @* Enable this once you have account confirmation enabled for password reset functionality
                        <p>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                        <p class="mb-1">
                            <a href="forgot-password.html">I forgot my password</a>
                        </p>
                        </p> *@
            }

            @Html.EditorFor(m => m.ReturnUrl, new { htmlAttributes = new { type = "hidden", id = "returnUrl" } })
            @Html.Hidden("postUrl", Url.Action("Login", "Account"))
            <div><h4 id="errorMessageDiv" style="color: red; text-align: center"></h4></div>
        </div>
        <!-- /.login-card-body -->
    </div>
</div>

    <div class="modal fade" id="spinnerModal" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content bg-white">
                <div class="modal-header">
                    <h3 class="modal-title">Logging you in...</h3>
                </div>
                <div class="modal-body">
                    <div class="img-responsive" style="text-align: center">
                        <img src="~/Content/spinner-img.gif" />
                    </div>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
<!-- /.modal -->

@Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/admin-lte/script")

    <script>

        $(document).ready(function () {
            var queryString = new URLSearchParams(location.search);
            var returnUrl = queryString.get("ReturnUrl");

            $("#returnUrl").val(returnUrl);

        });

        var handleLogin = function() {

            // client side validation to see if all form fields is valid..
            if (!$("#loginForm").valid()) {
                return false;
            }

            //$("#loginButton")
            //    .html('<div><span><Logging you in... </span>' +
            //        ' <div class="spinner-border text-danger" role="status">' +
            //        '<span class="sr-only">Logging you in...</span></div>' +
            //        '</div>');
            //$("#spinnerModal").modal('show');

            var postUrl = $("#postUrl").val();
            var postData = $("#loginForm").serialize();

            $.ajax({
                url: postUrl,
                type: "post",
                data: postData,
                //contentType: "application/json;charset=utf-8",
                success: function (response) {

                    //$("#loginButton").html("Login")
                    //$("#spinnerModal").modal('hide');
                    if (response.status === "NotSuccessful") {
                        $("#errorMessageDiv").html("Your password or email address is not correct.");
                    } else {
                        location.assign($("#returnUrl").val());
                    }
                }
            });
        }
    </script>
</body>

</html>
